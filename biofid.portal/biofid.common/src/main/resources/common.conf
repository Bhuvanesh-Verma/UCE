# University scraping and bib properties
university.botanik.base.url=https://sammlungen.ub.uni-frankfurt.de/botanik/periodical/titleinfo/{ID}
university.collection.base.url=https://sammlungen.ub.uni-frankfurt.de

# Gbif scraping properties
gbif.occurrences.search.url=https://api.gbif.org/v1/occurrence/search?limit=10&media_type=stillImage&taxon_key={TAXON_ID}

# Settings for release and debug. Comment the correct one for your current need
# One day this can be split into a release and local common.conf file.

# RELEASE: ===================
# DB Commands:
# - dump: docker exec -t biofid-postgresql pg_dumpall -c -U postgres > biofid-dump.sql
# - restore: docker exec -i 109a48695a0a3105afc9758258f3daca40703ec9ad67a54e1e0dcea0522c7928 psql -U postgres -d biofid < ../backups/2024-07-04_Db_Backup.sql
# Restart and rebuild a single docker container:
# - docker-compose up -d --force-recreate --build biofid-rag-service
# Flow for docker commit of container and then pushing of image
# - DB Export: docker container cp biofid_environment-biofid-postgresql-db-1:/var/lib/postgresql/data db-data
# - Container commit: docker commit CONTAINER_ID biofid-web-1
# - Image tag: docker image tag biofid-web-1 docker.texttechnologylab.org/biofid/uce/biofid-web-1:0.0.1
# - Image push: docker push docker.texttechnologylab.org/biofid/uce/biofid-web-1:0.0.1
# RAG Webserver properties
#rag.webserver.base.url=http://biofid-rag-service:5678/
#rag.model=ChatGPT

#templates.location=../resources/templates/
#external.public.location=target/classes/public

#postgresql.connection.driver_class=org.postgresql.Driver
#postgresql.dialect=org.hibernate.dialect.PostgreSQL162Dialect
#postgresql.hibernate.connection.url=jdbc:postgresql://biofid-postgresql-db:5432/biofid
#postgresql.hibernate.connection.username=postgres
#postgresql.hibernate.connection.password=1234
#postgresql.hibernate.current_session_context_class=thread
#postgresql.hibernate.show_sql=false
#postgresql.hibernate.format_sql=true
#postgresql.hibernate.hbm2ddl.auto=update

# DEBUG: ===================
rag.webserver.base.url=http://localhost:5678/
rag.model=ChatGPT

templates.location=resources/templates/
external.public.location=biofid.web/src/main/resources/public

postgresql.connection.driver_class=org.postgresql.Driver
postgresql.dialect=org.hibernate.dialect.PostgreSQL162Dialect
postgresql.hibernate.connection.url=jdbc:postgresql://localhost:8002/biofid
postgresql.hibernate.connection.username=postgres
postgresql.hibernate.connection.password=1234
postgresql.hibernate.current_session_context_class=thread
postgresql.hibernate.show_sql=false
postgresql.hibernate.format_sql=true
postgresql.hibernate.hbm2ddl.auto=update


# OBSOLETE FOR NOW: =======================
# local hibernate postgresql connection properties
#postgresql.connection.driver_class=org.postgresql.Driver
#postgresql.dialect=org.hibernate.dialect.PostgreSQL162Dialect
#postgresql.hibernate.connection.url=jdbc:postgresql://localhost:5432/biofid
#postgresql.hibernate.connection.username=postgres
#postgresql.hibernate.connection.password=1234
#postgresql.hibernate.current_session_context_class=thread
#postgresql.hibernate.show_sql=false
#postgresql.hibernate.format_sql=true
# !!! If you put this on "create" it will wipe the database (other is "update") !!!
#postgresql.hibernate.hbm2ddl.auto=update
