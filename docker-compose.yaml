# version: '3.8'
# For the variables, create an '.env' file on the same level as this compose file
# In there, declare the variables with your desired values like:
# UCE_CONFIG_PATH=./../uceConfig.json
# JVM_ARGS=-Xmx8g
# ...

services:

  uce-fuseki-sparql:
    container_name: uce-fuseki-sparql
    image: fuseki
    ports:
      - "8030:5430"
    volumes:
      - ${TDB2_DATA}:/fuseki/databases/${TDB2_ENDPOINT}
    environment:
      - JVM_ARGS=${JVM_ARGS}
    command: --update --tdb2 --port 5430 --loc /fuseki/databases/${TDB2_ENDPOINT} /${TDB2_ENDPOINT}
    networks:
      - app_net
    
  uce-rag-service:
    container_name: uce-rag-service
    build:
      context: .
      dockerfile: ./rag/Dockerfile
    ports:
      - "8080:5678" 
    depends_on:
      - uce-postgresql-db 
    networks:
      - app_net

  uce-web:
    container_name: uce-web
    build:
      context: .
      dockerfile: ./uce.portal/uce.web/Dockerfile
    ports:
      - "8008:4567"
    depends_on:
      - uce-postgresql-db
    networks:
      - app_net
    volumes:
      - "${UCE_CONFIG_PATH}:/app/config/uceConfig.json"
      - "./database:/app/database"
    command: [ "/bin/sh", "-c", "sleep 7 && java -jar ./target/webportal-jar-with-dependencies.jar -cf /app/config/uceConfig.json" ]

  uce-importer:
    container_name: uce-importer
    build:
      context: .
      dockerfile: ./uce.portal/uce.corpus-importer/Dockerfile
    depends_on:
      - uce-postgresql-db
    networks:
      - app_net
    volumes:
      - "./database:/app/database"
      # MOUNT HERE ALL UIMA CORPORA INTO THE '/app/input/corpora/zobodat' PATH 
      - "./../test_data/corpora/zobodat:/app/input/corpora/zobodat"
    command: [ "/bin/sh", "-c", "sleep 7 && java -jar ./target/importer.jar -srcDir /app/input/corpora/ -num 1 -t 4" ]

  uce-postgresql-db:
    container_name: uce-postgresql-db
    image: pgvector/pgvector:pg16
    shm_size: 1g
    environment:
      POSTGRES_DB: uce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234 
    ports:
      - "8002:5432"
    networks:
      - app_net

networks:
  app_net:
    driver: bridge

volumes:
  pgdata:
